{"version":3,"sources":["Components/info.module.css","Components/weather-info.jsx","Components/Info.jsx","Components/modal.js","accets/preloader.gif","common/Preloader.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Weather","props","className","city_name","country_code","temp","wind_spd","wind_cdir_full","error","Info","s","info_block","appTextOne","appTextTwo","Modal","useState","active","setActive","useEffect","onClick","onSubmit","getWeather","e","stopPropagation","type","name","placeholder","Preloader","src","preloader","API_KEY","App","state","undefined","isFetching","a","preventDefault","lat","target","elements","value","lon","fetch","api_url","json","data","setState","windSpd","windCdir","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68b902b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info_block\":\"info_info_block__2ocI5\",\"appTextOne\":\"info_appTextOne__10D7C\",\"appTextTwo\":\"info_appTextTwo__tmEY6\"};","import React, {useState} from \"react\";\r\nimport './weatherInfo.css'\r\n\r\nlet Weather = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='weatherData'>\r\n\r\n            {props &&\r\n                <div className='weatherData_data'>\r\n                    <li>City: {props.city_name} {props.country_code}</li>\r\n                    <li>Temperature: {props.temp}℃ </li>\r\n                <li> Wind speed: {props.wind_spd}m/s </li>\r\n                <li> Direction of the wind: {props.wind_cdir_full} </li>\r\n\r\n            </div>\r\n            }\r\n            <div className='error'>\r\n                <p>{props.error}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n\r\n"," import React from \"react\";\r\nimport s from './info.module.css'\r\n\r\nlet Info = () => {\r\n    return (\r\n        <div className={s.info_block}>\r\n            <div className={s.appTextOne}>App\r\n            </div>\r\n            <div  className={s.appTextTwo}>Find Weather</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import React, {useEffect, useState} from \"react\";\r\nimport './modal.css'\r\n\r\n\r\nlet Modal = (props) => {\r\n    const [active, setActive] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        setActive(false)\r\n\r\n    }, [])\r\n\r\n    return <div className='modalBox'>\r\n\r\n        <button onClick={() => setActive(true)}> Settings</button>\r\n\r\n\r\n        <div className={active ? 'modal active' : 'modal'} onClick={() => setActive(false)}\r\n             onSubmit={props.getWeather}>\r\n\r\n            <div className='modalContent' onClick={e => e.stopPropagation()}>\r\n                <form onSubmit={props.getWeather}>\r\n                    <div><input type='text' name='lat' placeholder='Enter Latitude'/></div>\r\n                    <div><input type='text' name='lon' placeholder='Enter Longitude'/></div>\r\n\r\n\r\n                    <div>\r\n                        <button className={active ? 'btn active' : 'btn'} onClick={() => setActive(false)}\r\n                                onSubmit={props.getWeather}>Save\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => setActive(false)} >Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/preloader.91319f38.gif\";","import React from 'react';\r\nimport preloader from '../accets/preloader.gif';\r\nimport './preloader.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className='preloader'>\r\n        <img src={preloader} />\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\nimport Weather from \"./Components/weather-info\";\nimport Info from \"./Components/Info\";\nimport './App.css'\nimport Modal from \"./Components/modal\";\nimport Preloader from \"./common/Preloader\";\n\n\n\nconst API_KEY = '35adf859203f4108bd1bebbb1527d1f7';\n\n\n\nclass App extends React.Component {\n\n\n\n    state = {\n        city_name: undefined,\n        country_code: undefined,\n        temp: undefined,\n        wind_spd: undefined,\n        wind_cdir_full: undefined,\n        error: undefined,\n        isFetching: false\n    }\n\n\n    getWeather = async (e) => {\n\n        e.preventDefault();\n        const lat = e.target.elements.lat.value;\n        const lon = e.target.elements.lon.value;\n\n\n        if (lat,lon) {\n            const api_url = await\n                fetch(`https://api.weatherbit.io/v2.0/current?lat=${lat}&lon=${lon}&key=${API_KEY}`);\n            const data = await api_url.json();\n            this.setState({\n\n                city_name: data.data[0].city_name,\n                country_code: data.data[0].country_code,\n                temp: data.data[0].temp,\n                windSpd: data.data[0].wind_spd,\n                windCdir: data.data[0].wind_cdir_full,\n                error: undefined,\n                isFetching: !this.state.isFetching\n\n            });\n        } else {\n            this.setState({\n                city_name: undefined,\n                country_code: undefined,\n                temp: undefined,\n                wind_spd:undefined,\n                wind_cdir_full: undefined,\n                error: 'Введите геоданные!'\n            });\n        }\n    }\n\n\n\n\n\n\n    render() {\n        return<>\n\n            {this.state.isFetching ? <Preloader/> : null}\n\n\n\n            <div className='App'>\n\n                <div className='Info'>\n                    <Info />\n                </div>\n\n                <div className='Modal'>\n                    <Modal getWeather={this.getWeather}\n                           isFetching={this.state.isFetching}\n                           />\n                </div>\n\n                <div className='Weather'>\n                    <Weather className='Weather'\n                             city_name={this.state.city_name}\n                             country_code={this.state.country_code}\n                             temp={this.state.temp}\n                             wind_spd={this.state.windSpd}\n                             wind_cdir_full={this.state.windCdir}\n                             error={this.state.error}/>\n                </div>\n\n\n\n            </div>\n         </>\n    }\n\n}\n\n\nexport default  App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}